c
category.subcategories
category
object
Object
c
obj.image
obj
c
obj.imagec
obj.image
object.image
url_for(obj.image)
url_option(obj.image)
obj.image
obj.image.attached?
obj.image.attached_url
obj.image.url
obj.image
obj
c
url_for(obj.image)
obj.image.url
ActiveStorage::Attached.obj.image
obj.image
obj.image.variant_id
obj.image.variant
obj.image.variant_type
obj.image.record_type
obj.image.record_id
obj.image.blob_id
obj.blob_id
blob_id
image_tag(obj.image._id)
image_tag(obj.image.variant_id)
image_tag(obj.image.blob_id)
image_tag(obj.image.attchment)
image_tag(obj.image.url)
image_tag(obj.image.attached)
image_tag(obj.image.attached?)
image_tag(obj.image.attched?)
image_tag(obj.image.attched)
image_tag(obj.image)
obj.image.attached?
obj.image.attach
obj.image
obj
c
clear
@users
n
c
User.all
object
user
c
respond_to
c
respond_to
c
respond_to
c
n
@users
c
@user.save!
@user.save
n
c
@user.save
@user
n
c
@user.save
n
c
@user.save!
@user.save
@user
n
@user.save!
permitted_params[:user]
params
user
c
n
@current_user
c
n
c
n
c
n
c
n
instructor.present?
n
c
n
@current_instructor
c
 @current_instructor.programs.all.count
 @current_instructor.programs.all
 @current_instructor.programs.count
 @current_instructor.programs
program
n
c
n
c
@current_instructor
n
c
@current_instructor.programs.where("status LIKE '%#{params[:status]}}%'")
 @current_instructor.programs.where("status LIKE '%#{params[:status]}}%'")
 @program
params[:status]
n
@program
c
n
@program
n
@program
c
listing(@enrolls)
n
@enrolls
n
c
enroll
n
enroll
n
program
n
c
program
c
n
program
n
program
c
program
n
c
program
n
program
c
program
n
program
c
program;
n
program
c
n
c
@program
n
@program
c
n
@program
c
@current_instructor
n
@current_instructor
decoded
docoded
header
@decoded
n
c
@current_instructor
n
decoded
n
header
n
header
n
c
program
n
c
@current_instructor
n
c
@current_instructor
n
decoded
n
header
n
c
@current_instructor
n
c
@current_instructor
n
c
@current_instructor
n
c
@current_instructor
n
decoded
n
header
n
c
@program
n
c
@instructor
n
c
@instructor
n
c
@instructor
n
c
@instructor
n
c
@instructor
@imstrictor
n
c
@instructor
n
c
n
@instructor
n
c
n
c
@instructor
n
@instructor
c
@instructor
n
